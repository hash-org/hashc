
let some_var: int = 3;
let conv<T, str> = (x) => "<unknown>";

// I'm a line comment
struct MyStruct = <T> => {
    field: T,
    other_field: int,
    default_field: float = 6.0,
};


/* I am a multi block comment which has multiple lines and 
   can be use as documentation comments for functions, structs, enums,
   etc.
 */
enum MyEnum = <T, Y> => {
    MyVariant(T),
    OtherVariant(int, Y),
    InnerVariant(MyEnum<int, str>, str),
    EmptyVariant,
};

let var = 0;
let big_string = "One, two, three";

let func: (int) => str = (x) => conv(x);

let other_func = (t: str) => {
    match t {
        "one" => 1;
        "two" => 2;
        "three" => 3;
        "four" | "five" if var => 4.5;
        _ => -1;
    }
};

trait conv = <T, E> => (T) => E;

let conv<int, str> = (num) => #intinsic_conv_int_to_str(num);
let push<A> where eq<A> = (arr, item) => #intrinsic_list_add(arr, item);

// if statements!
if (var == 23 || other_var == "value") {
    print("some var");
} else {
    print("not some var");
}


let a = [1,2,3,4,5,6,7,8,9,];
let b: {int: char} = {1: '2', 3: '5'};
let c = {1,2,3,4,5,6,7,};
let d = (1,2,3,4,5);

// Import
let num = import("num);
