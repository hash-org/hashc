// run=fail
Mux := struct(val := 3, bal := 'c');

Foo := trait {
  // Self: Type;
  
  bax : () -> u32;

  bux : (a: i32) -> Mux; 
};

Frobulate := struct(
  data: i32,
  other: char = 'c',
);


Frobulate ~= impl Foo {
  bax := () -> u32 => {
    1u32
  };

  // So: also change type annotation checking in functions 
  bux := (a: i32) -> Mux => {
      Mux(val = a)
  }; 

  member_not_on_trt := (a: i32, b: char) -> Mux => {
      match a {
        0..10 => Mux(val = 1);
        11..20 => Mux(val = 2);
        21..30 => Mux(val = 3);
        31..40 => Mux(val = 4);
        _ => Mux(val = 17);
      }
  };
};

