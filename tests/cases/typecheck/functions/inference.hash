// stage=typecheck
ensure := <T> => (t: T) => {};

foo := (a: str) => 3;

bar := (a: i32) => a;

baz := (a) -> i32 => a;

bin := (a: i32 = 3) => a;

boo := (bing: bool) => {
  if bing {
    true
  } else {
    false
  }
};

main := () => {
  // named arg type
  ensure<(a: str) -> i32>(foo);

  // return type inference
  ensure<(a: i32) -> i32>(bar);

  // parameter type inference
  ensure<(a: i32) -> i32>(baz);

  // default value inference
  ensure<(a: i32) -> i32>(bin);

  // more complex inference
  ensure<(bing: bool) -> bool>(boo);
};
