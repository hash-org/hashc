// run=pass, stage=parse

Foo := enum<T, U, Mux> (
    One(
        foo: U,
        bar: T,
        mu: Mux
    )
);

T := enum<U,> (
     Beep(T),
     Name(T, char),
     Traverse(T, str, u32, Vec<f32>),
     Transcend(T -> U),
);

Foo := enum<T = i32, U, Mux: Hash ~ Eq> (
    ContaintorOf(U), 
    DetainorOf(T), 
    MapOf(
        items: Map<Mux, T>
    )
);

Foo := enum<T = i32, K := Mux ~ Universe, U: Type, Mux: Hash ~ Eq> (
    With(U), 
    Or(T), 
);
