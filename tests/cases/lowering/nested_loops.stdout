info: IR dump:
IR dump for function `main` defined at $DIR/nested_loops.hash:3:9-28:2
main := () -> () {
    mut _0: ();
    _1: i32;	// parameter `t`
    _2: (i32, bool);
    mut _3: bool;
    _4: i32;	// parameter `m`
    _5: (i32, bool);
    _6: bool;
    _7: bool;
    _8: (i32, bool);

    bb0 {
        _1 = const 0_i32;
        goto -> bb1;
    }

    bb1 {
        _2 = CheckedAdd(_1, const 1_i32);
        assert((_2.1), false, "attempt to compute `_1 + const 1_i32`, which would overflow") -> bb3;
    }

    bb2 {
        return;
    }

    bb3 {
        _1 = (_2.0);
        _3 = Gt(_1, const 10_i32);
        switch(_3) [false -> bb4, otherwise -> bb2];
    }

    bb4 {
        goto -> bb5;
    }

    bb5 {
        _5 = CheckedAdd(_1, const 1_i32);
        assert((_5.1), false, "attempt to compute `_1 + const 1_i32`, which would overflow") -> bb6;
    }

    bb6 {
        _4 = (_5.0);
        goto -> bb7;
    }

    bb7 {
        _6 = LtEq(const 0_i32, _4);
        switch(_6) [false -> bb9, otherwise -> bb8];
    }

    bb8 {
        _7 = LtEq(_4, const 3_i32);
        switch(_7) [false -> bb9, otherwise -> bb7];
    }

    bb9 {
        switch(_4) [4_i32 -> bb1, otherwise -> bb10];
    }

    bb10 {
        _8 = CheckedSub(_4, const 1_i32);
        assert((_8.1), false, "attempt to compute `_4 - const 1_i32`, which would overflow") -> bb11;
    }

    bb11 {
        goto -> bb7;
    }
}


